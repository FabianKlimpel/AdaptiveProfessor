#ifndef __LINALG__H
#define __LINALG__H

#include <iostream>
//#include <stdlib.h>
#include <vector>
#include <math.h>


using namespace std;

/**
* This Class is a container for linear algebra.
*/
class LinAlg
{
public:

	//extracts a coloumn of a matrix
	static vector<double> getcol(const vector<vector<double>>& mat, const size_t j);

	//calculates the absolut value of a vector
	static double getabs(const vector<double>& vec);

	//transposes a matrix
	static vector<vector<double>> transpose(const vector<vector<double>>& mat);

	//multiplicates a matrix and a vector
	static vector<double> multmatvec(const vector<vector<double>>& mat, const vector<double>& vec);

	//normalizes a vector
	static vector<double> normalizevec(const vector<double>& vec);

	//calculates the difference between two vectors
	static double getdistanceofvectors(vector<double> a, const vector<double>& b);

	//calculates the dotproduct of two vectors
	static double dotproduct(const vector<double>& a, const vector<double>& b);

	//solves a problem of the type matrix * vector = vector
	static vector<double> getbestfitparameters(const vector<vector<double>> a, const vector<double> x, vector<double> b);

	static void collinearity(vector<double>& a, const vector<vector<double>>& r, const vector<double>& b, const double threshold, const double kappa);
};

#endif
